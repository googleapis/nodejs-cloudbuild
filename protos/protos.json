{
  "nested": {
    "google": {
      "nested": {
        "devtools": {
          "nested": {
            "cloudbuild": {
              "nested": {
                "v1": {
                  "options": {
                    "go_package": "google.golang.org/genproto/googleapis/devtools/cloudbuild/v1;cloudbuild",
                    "java_multiple_files": true,
                    "java_package": "com.google.cloudbuild.v1",
                    "objc_class_prefix": "GCB"
                  },
                  "nested": {
                    "CloudBuild": {
                      "options": {
                        "(google.api.default_host)": "cloudbuild.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateBuild": {
                          "requestType": "CreateBuildRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/projects/{project_id}/builds",
                            "(google.api.http).body": "build",
                            "(google.api.method_signature)": "project_id,build",
                            "(google.longrunning.operation_info).response_type": "Build",
                            "(google.longrunning.operation_info).metadata_type": "BuildOperationMetadata"
                          }
                        },
                        "GetBuild": {
                          "requestType": "GetBuildRequest",
                          "responseType": "Build",
                          "options": {
                            "(google.api.http).get": "/v1/projects/{project_id}/builds/{id}",
                            "(google.api.method_signature)": "project_id,id"
                          }
                        },
                        "ListBuilds": {
                          "requestType": "ListBuildsRequest",
                          "responseType": "ListBuildsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/projects/{project_id}/builds",
                            "(google.api.method_signature)": "project_id,filter"
                          }
                        },
                        "CancelBuild": {
                          "requestType": "CancelBuildRequest",
                          "responseType": "Build",
                          "options": {
                            "(google.api.http).post": "/v1/projects/{project_id}/builds/{id}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "project_id,id"
                          }
                        },
                        "RetryBuild": {
                          "requestType": "RetryBuildRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/projects/{project_id}/builds/{id}:retry",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "project_id,id",
                            "(google.longrunning.operation_info).response_type": "Build",
                            "(google.longrunning.operation_info).metadata_type": "BuildOperationMetadata"
                          }
                        },
                        "CreateBuildTrigger": {
                          "requestType": "CreateBuildTriggerRequest",
                          "responseType": "BuildTrigger",
                          "options": {
                            "(google.api.http).post": "/v1/projects/{project_id}/triggers",
                            "(google.api.http).body": "trigger",
                            "(google.api.method_signature)": "project_id,trigger"
                          }
                        },
                        "GetBuildTrigger": {
                          "requestType": "GetBuildTriggerRequest",
                          "responseType": "BuildTrigger",
                          "options": {
                            "(google.api.http).get": "/v1/projects/{project_id}/triggers/{trigger_id}",
                            "(google.api.method_signature)": "project_id,trigger_id"
                          }
                        },
                        "ListBuildTriggers": {
                          "requestType": "ListBuildTriggersRequest",
                          "responseType": "ListBuildTriggersResponse",
                          "options": {
                            "(google.api.http).get": "/v1/projects/{project_id}/triggers",
                            "(google.api.method_signature)": "project_id"
                          }
                        },
                        "DeleteBuildTrigger": {
                          "requestType": "DeleteBuildTriggerRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/projects/{project_id}/triggers/{trigger_id}",
                            "(google.api.method_signature)": "project_id,trigger_id"
                          }
                        },
                        "UpdateBuildTrigger": {
                          "requestType": "UpdateBuildTriggerRequest",
                          "responseType": "BuildTrigger",
                          "options": {
                            "(google.api.http).patch": "/v1/projects/{project_id}/triggers/{trigger_id}",
                            "(google.api.http).body": "trigger",
                            "(google.api.method_signature)": "project_id,trigger_id,trigger"
                          }
                        },
                        "RunBuildTrigger": {
                          "requestType": "RunBuildTriggerRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/projects/{project_id}/triggers/{trigger_id}:run",
                            "(google.api.http).body": "source",
                            "(google.api.method_signature)": "project_id,trigger_id,source",
                            "(google.longrunning.operation_info).response_type": "Build",
                            "(google.longrunning.operation_info).metadata_type": "BuildOperationMetadata"
                          }
                        },
                        "CreateWorkerPool": {
                          "requestType": "CreateWorkerPoolRequest",
                          "responseType": "WorkerPool"
                        },
                        "GetWorkerPool": {
                          "requestType": "GetWorkerPoolRequest",
                          "responseType": "WorkerPool"
                        },
                        "DeleteWorkerPool": {
                          "requestType": "DeleteWorkerPoolRequest",
                          "responseType": "google.protobuf.Empty"
                        },
                        "UpdateWorkerPool": {
                          "requestType": "UpdateWorkerPoolRequest",
                          "responseType": "WorkerPool"
                        },
                        "ListWorkerPools": {
                          "requestType": "ListWorkerPoolsRequest",
                          "responseType": "ListWorkerPoolsResponse"
                        }
                      }
                    },
                    "RetryBuildRequest": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "id": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "RunBuildTriggerRequest": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "triggerId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "source": {
                          "type": "RepoSource",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "StorageSource": {
                      "fields": {
                        "bucket": {
                          "type": "string",
                          "id": 1
                        },
                        "object": {
                          "type": "string",
                          "id": 2
                        },
                        "generation": {
                          "type": "int64",
                          "id": 3
                        }
                      }
                    },
                    "RepoSource": {
                      "oneofs": {
                        "revision": {
                          "oneof": [
                            "branchName",
                            "tagName",
                            "commitSha"
                          ]
                        }
                      },
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "repoName": {
                          "type": "string",
                          "id": 2
                        },
                        "branchName": {
                          "type": "string",
                          "id": 3
                        },
                        "tagName": {
                          "type": "string",
                          "id": 4
                        },
                        "commitSha": {
                          "type": "string",
                          "id": 5
                        },
                        "dir": {
                          "type": "string",
                          "id": 7
                        },
                        "invertRegex": {
                          "type": "bool",
                          "id": 8
                        },
                        "substitutions": {
                          "keyType": "string",
                          "type": "string",
                          "id": 9
                        }
                      }
                    },
                    "Source": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "storageSource",
                            "repoSource"
                          ]
                        }
                      },
                      "fields": {
                        "storageSource": {
                          "type": "StorageSource",
                          "id": 2
                        },
                        "repoSource": {
                          "type": "RepoSource",
                          "id": 3
                        }
                      }
                    },
                    "BuiltImage": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "digest": {
                          "type": "string",
                          "id": 3
                        },
                        "pushTiming": {
                          "type": "TimeSpan",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "BuildStep": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        },
                        "dir": {
                          "type": "string",
                          "id": 4
                        },
                        "id": {
                          "type": "string",
                          "id": 5
                        },
                        "waitFor": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 6
                        },
                        "entrypoint": {
                          "type": "string",
                          "id": 7
                        },
                        "secretEnv": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 8
                        },
                        "volumes": {
                          "rule": "repeated",
                          "type": "Volume",
                          "id": 9
                        },
                        "timing": {
                          "type": "TimeSpan",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "pullTiming": {
                          "type": "TimeSpan",
                          "id": 13
                        },
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 11
                        },
                        "status": {
                          "type": "Build.Status",
                          "id": 12
                        }
                      }
                    },
                    "Volume": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "path": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "Results": {
                      "fields": {
                        "images": {
                          "rule": "repeated",
                          "type": "BuiltImage",
                          "id": 2
                        },
                        "buildStepImages": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        },
                        "artifactManifest": {
                          "type": "string",
                          "id": 4
                        },
                        "numArtifacts": {
                          "type": "int64",
                          "id": 5
                        },
                        "buildStepOutputs": {
                          "rule": "repeated",
                          "type": "bytes",
                          "id": 6
                        },
                        "artifactTiming": {
                          "type": "TimeSpan",
                          "id": 7
                        }
                      }
                    },
                    "ArtifactResult": {
                      "fields": {
                        "location": {
                          "type": "string",
                          "id": 1
                        },
                        "fileHash": {
                          "rule": "repeated",
                          "type": "FileHashes",
                          "id": 2
                        }
                      }
                    },
                    "Build": {
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "projectId": {
                          "type": "string",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "status": {
                          "type": "Status",
                          "id": 2
                        },
                        "statusDetail": {
                          "type": "string",
                          "id": 24
                        },
                        "source": {
                          "type": "Source",
                          "id": 3
                        },
                        "steps": {
                          "rule": "repeated",
                          "type": "BuildStep",
                          "id": 11
                        },
                        "results": {
                          "type": "Results",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finishTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 12
                        },
                        "images": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 13
                        },
                        "queueTtl": {
                          "type": "google.protobuf.Duration",
                          "id": 40
                        },
                        "artifacts": {
                          "type": "Artifacts",
                          "id": 37
                        },
                        "logsBucket": {
                          "type": "string",
                          "id": 19
                        },
                        "sourceProvenance": {
                          "type": "SourceProvenance",
                          "id": 21
                        },
                        "buildTriggerId": {
                          "type": "string",
                          "id": 22
                        },
                        "options": {
                          "type": "BuildOptions",
                          "id": 23
                        },
                        "logUrl": {
                          "type": "string",
                          "id": 25,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "substitutions": {
                          "keyType": "string",
                          "type": "string",
                          "id": 29
                        },
                        "tags": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 31
                        },
                        "secrets": {
                          "rule": "repeated",
                          "type": "Secret",
                          "id": 32
                        },
                        "timing": {
                          "keyType": "string",
                          "type": "TimeSpan",
                          "id": 33,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Status": {
                          "values": {
                            "STATUS_UNKNOWN": 0,
                            "QUEUED": 1,
                            "WORKING": 2,
                            "SUCCESS": 3,
                            "FAILURE": 4,
                            "INTERNAL_ERROR": 5,
                            "TIMEOUT": 6,
                            "CANCELLED": 7,
                            "EXPIRED": 9
                          }
                        }
                      }
                    },
                    "Artifacts": {
                      "fields": {
                        "images": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        },
                        "objects": {
                          "type": "ArtifactObjects",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ArtifactObjects": {
                          "fields": {
                            "location": {
                              "type": "string",
                              "id": 1
                            },
                            "paths": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "timing": {
                              "type": "TimeSpan",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "TimeSpan": {
                      "fields": {
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        }
                      }
                    },
                    "BuildOperationMetadata": {
                      "fields": {
                        "build": {
                          "type": "Build",
                          "id": 1
                        }
                      }
                    },
                    "SourceProvenance": {
                      "fields": {
                        "resolvedStorageSource": {
                          "type": "StorageSource",
                          "id": 3
                        },
                        "resolvedRepoSource": {
                          "type": "RepoSource",
                          "id": 6
                        },
                        "fileHashes": {
                          "keyType": "string",
                          "type": "FileHashes",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "FileHashes": {
                      "fields": {
                        "fileHash": {
                          "rule": "repeated",
                          "type": "Hash",
                          "id": 1
                        }
                      }
                    },
                    "Hash": {
                      "fields": {
                        "type": {
                          "type": "HashType",
                          "id": 1
                        },
                        "value": {
                          "type": "bytes",
                          "id": 2
                        }
                      },
                      "nested": {
                        "HashType": {
                          "values": {
                            "NONE": 0,
                            "SHA256": 1,
                            "MD5": 2
                          }
                        }
                      }
                    },
                    "Secret": {
                      "fields": {
                        "kmsKeyName": {
                          "type": "string",
                          "id": 1
                        },
                        "secretEnv": {
                          "keyType": "string",
                          "type": "bytes",
                          "id": 3
                        }
                      }
                    },
                    "CreateBuildRequest": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "build": {
                          "type": "Build",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetBuildRequest": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "id": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListBuildsRequest": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 8
                        }
                      }
                    },
                    "ListBuildsResponse": {
                      "fields": {
                        "builds": {
                          "rule": "repeated",
                          "type": "Build",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CancelBuildRequest": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "id": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BuildTrigger": {
                      "oneofs": {
                        "buildTemplate": {
                          "oneof": [
                            "build",
                            "filename"
                          ]
                        }
                      },
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 10
                        },
                        "name": {
                          "type": "string",
                          "id": 21
                        },
                        "tags": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 19
                        },
                        "triggerTemplate": {
                          "type": "RepoSource",
                          "id": 7
                        },
                        "github": {
                          "type": "GitHubEventsConfig",
                          "id": 13
                        },
                        "build": {
                          "type": "Build",
                          "id": 4
                        },
                        "filename": {
                          "type": "string",
                          "id": 8
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "disabled": {
                          "type": "bool",
                          "id": 9
                        },
                        "substitutions": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "ignoredFiles": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 15
                        },
                        "includedFiles": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 16
                        }
                      }
                    },
                    "GitHubEventsConfig": {
                      "oneofs": {
                        "event": {
                          "oneof": [
                            "pullRequest",
                            "push"
                          ]
                        }
                      },
                      "fields": {
                        "installationId": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "owner": {
                          "type": "string",
                          "id": 6
                        },
                        "name": {
                          "type": "string",
                          "id": 7
                        },
                        "pullRequest": {
                          "type": "PullRequestFilter",
                          "id": 4
                        },
                        "push": {
                          "type": "PushFilter",
                          "id": 5
                        }
                      }
                    },
                    "PullRequestFilter": {
                      "oneofs": {
                        "gitRef": {
                          "oneof": [
                            "branch"
                          ]
                        }
                      },
                      "fields": {
                        "branch": {
                          "type": "string",
                          "id": 2
                        },
                        "commentControl": {
                          "type": "CommentControl",
                          "id": 5
                        },
                        "invertRegex": {
                          "type": "bool",
                          "id": 6
                        }
                      },
                      "nested": {
                        "CommentControl": {
                          "values": {
                            "COMMENTS_DISABLED": 0,
                            "COMMENTS_ENABLED": 1
                          }
                        }
                      }
                    },
                    "PushFilter": {
                      "oneofs": {
                        "gitRef": {
                          "oneof": [
                            "branch",
                            "tag"
                          ]
                        }
                      },
                      "fields": {
                        "branch": {
                          "type": "string",
                          "id": 2
                        },
                        "tag": {
                          "type": "string",
                          "id": 3
                        },
                        "invertRegex": {
                          "type": "bool",
                          "id": 4
                        }
                      }
                    },
                    "CreateBuildTriggerRequest": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trigger": {
                          "type": "BuildTrigger",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetBuildTriggerRequest": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "triggerId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListBuildTriggersRequest": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListBuildTriggersResponse": {
                      "fields": {
                        "triggers": {
                          "rule": "repeated",
                          "type": "BuildTrigger",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteBuildTriggerRequest": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "triggerId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateBuildTriggerRequest": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "triggerId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trigger": {
                          "type": "BuildTrigger",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BuildOptions": {
                      "fields": {
                        "sourceProvenanceHash": {
                          "rule": "repeated",
                          "type": "Hash.HashType",
                          "id": 1
                        },
                        "requestedVerifyOption": {
                          "type": "VerifyOption",
                          "id": 2
                        },
                        "machineType": {
                          "type": "MachineType",
                          "id": 3
                        },
                        "diskSizeGb": {
                          "type": "int64",
                          "id": 6
                        },
                        "substitutionOption": {
                          "type": "SubstitutionOption",
                          "id": 4
                        },
                        "logStreamingOption": {
                          "type": "LogStreamingOption",
                          "id": 5
                        },
                        "workerPool": {
                          "type": "string",
                          "id": 7
                        },
                        "logging": {
                          "type": "LoggingMode",
                          "id": 11
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 12
                        },
                        "secretEnv": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 13
                        },
                        "volumes": {
                          "rule": "repeated",
                          "type": "Volume",
                          "id": 14
                        }
                      },
                      "nested": {
                        "VerifyOption": {
                          "values": {
                            "NOT_VERIFIED": 0,
                            "VERIFIED": 1
                          }
                        },
                        "MachineType": {
                          "values": {
                            "UNSPECIFIED": 0,
                            "N1_HIGHCPU_8": 1,
                            "N1_HIGHCPU_32": 2
                          }
                        },
                        "SubstitutionOption": {
                          "values": {
                            "MUST_MATCH": 0,
                            "ALLOW_LOOSE": 1
                          }
                        },
                        "LogStreamingOption": {
                          "values": {
                            "STREAM_DEFAULT": 0,
                            "STREAM_ON": 1,
                            "STREAM_OFF": 2
                          }
                        },
                        "LoggingMode": {
                          "values": {
                            "LOGGING_UNSPECIFIED": 0,
                            "LEGACY": 1,
                            "GCS_ONLY": 2
                          }
                        }
                      }
                    },
                    "WorkerPool": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 14
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 3
                        },
                        "workerCount": {
                          "type": "int64",
                          "id": 4
                        },
                        "workerConfig": {
                          "type": "WorkerConfig",
                          "id": 16
                        },
                        "regions": {
                          "rule": "repeated",
                          "type": "Region",
                          "id": 9
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 17
                        },
                        "deleteTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12
                        },
                        "status": {
                          "type": "Status",
                          "id": 13
                        }
                      },
                      "nested": {
                        "Region": {
                          "values": {
                            "REGION_UNSPECIFIED": 0,
                            "US_CENTRAL1": 1,
                            "US_WEST1": 2,
                            "US_EAST1": 3,
                            "US_EAST4": 4
                          }
                        },
                        "Status": {
                          "values": {
                            "STATUS_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "RUNNING": 2,
                            "DELETING": 3,
                            "DELETED": 4
                          }
                        }
                      }
                    },
                    "WorkerConfig": {
                      "fields": {
                        "machineType": {
                          "type": "string",
                          "id": 1
                        },
                        "diskSizeGb": {
                          "type": "int64",
                          "id": 2
                        },
                        "network": {
                          "type": "Network",
                          "id": 3
                        },
                        "tag": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "Network": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "network": {
                          "type": "string",
                          "id": 2
                        },
                        "subnetwork": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "CreateWorkerPoolRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1
                        },
                        "workerPool": {
                          "type": "WorkerPool",
                          "id": 2
                        }
                      }
                    },
                    "GetWorkerPoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "DeleteWorkerPoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "UpdateWorkerPoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 2
                        },
                        "workerPool": {
                          "type": "WorkerPool",
                          "id": 3
                        }
                      }
                    },
                    "ListWorkerPoolsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "ListWorkerPoolsResponse": {
                      "fields": {
                        "workerPools": {
                          "rule": "repeated",
                          "type": "WorkerPool",
                          "id": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "FieldBehaviorProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "github.com/golang/protobuf/protoc-gen-go/descriptor;descriptor",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    }
                  }
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "google.golang.org/genproto/googleapis/longrunning;longrunning",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  }
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  }
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  }
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  }
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        }
      }
    }
  }
}